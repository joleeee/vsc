0: FUNCTION(main)
    0: PARAMETER(first)
    1: PARAMETER(last)
    2: LOCAL_VAR(result)
1: FUNCTION(sumRange)
    0: PARAMETER(first)
    1: PARAMETER(last)
    2: LOCAL_VAR(sumEnd)
    3: LOCAL_VAR(sumPreFirst)
2: FUNCTION(sumUntil)
    0: PARAMETER(n)
    1: LOCAL_VAR(product)

 == STRING LIST == 
0: "Printing the sum of all integers from"
1: "up to, but not including"

 == BOUND SYNTAX TREE == 
GLOBAL_LIST
 FUNCTION
  IDENTIFIER_DATA(main)
  PARAMETER_LIST
   IDENTIFIER_DATA(first)
   IDENTIFIER_DATA(last)
  BLOCK
   DECLARATION_LIST
    DECLARATION
     IDENTIFIER_DATA(result)
   STATEMENT_LIST
    PRINT_STATEMENT
     STRING_DATA(#0)
     IDENTIFIER_DATA(first) PARAMETER(0)
     STRING_DATA(#1)
     IDENTIFIER_DATA(last) PARAMETER(1)
    ASSIGNMENT_STATEMENT
     IDENTIFIER_DATA(result) LOCAL_VAR(2)
     EXPRESSION(call)
      IDENTIFIER_DATA(sumRange) FUNCTION(1)
      ARGUMENT_LIST
       IDENTIFIER_DATA(first) PARAMETER(0)
       IDENTIFIER_DATA(last) PARAMETER(1)
    PRINT_STATEMENT
     IDENTIFIER_DATA(result) LOCAL_VAR(2)
 FUNCTION
  IDENTIFIER_DATA(sumRange)
  PARAMETER_LIST
   IDENTIFIER_DATA(first)
   IDENTIFIER_DATA(last)
  BLOCK
   DECLARATION_LIST
    DECLARATION
     IDENTIFIER_DATA(sumEnd)
     IDENTIFIER_DATA(sumPreFirst)
   STATEMENT_LIST
    ASSIGNMENT_STATEMENT
     IDENTIFIER_DATA(sumEnd) LOCAL_VAR(2)
     EXPRESSION(call)
      IDENTIFIER_DATA(sumUntil) FUNCTION(2)
      ARGUMENT_LIST
       IDENTIFIER_DATA(last) PARAMETER(1)
    ASSIGNMENT_STATEMENT
     IDENTIFIER_DATA(sumPreFirst) LOCAL_VAR(3)
     EXPRESSION(call)
      IDENTIFIER_DATA(sumUntil) FUNCTION(2)
      ARGUMENT_LIST
       IDENTIFIER_DATA(first) PARAMETER(0)
    RETURN_STATEMENT
     EXPRESSION(-)
      IDENTIFIER_DATA(sumEnd) LOCAL_VAR(2)
      IDENTIFIER_DATA(sumPreFirst) LOCAL_VAR(3)
 FUNCTION
  IDENTIFIER_DATA(sumUntil)
  PARAMETER_LIST
   IDENTIFIER_DATA(n)
  BLOCK
   DECLARATION_LIST
    DECLARATION
     IDENTIFIER_DATA(product)
   STATEMENT_LIST
    ASSIGNMENT_STATEMENT
     IDENTIFIER_DATA(product) LOCAL_VAR(1)
     EXPRESSION(*)
      IDENTIFIER_DATA(n) PARAMETER(0)
      EXPRESSION(-)
       IDENTIFIER_DATA(n) PARAMETER(0)
       NUMBER_DATA(1)
    ASSIGNMENT_STATEMENT
     IDENTIFIER_DATA(product) LOCAL_VAR(1)
     EXPRESSION(/)
      IDENTIFIER_DATA(product) LOCAL_VAR(1)
      NUMBER_DATA(2)
    RETURN_STATEMENT
     IDENTIFIER_DATA(product) LOCAL_VAR(1)
